D_PlotFunction <- function (x, y) {

	require (ggplot2)
	x2 <- gsub (“\\_.*,””,x)
	y2 <- y

	#bowtie.pie
	#novo.D
	#Read in the data:
	Data <- read.table(x)
	colnames(Datt) <- c(‘chr’, ‘window’, ‘windowCount’, ‘propInwindow’, ‘D’)

	#Remove unnecessary regions: Not necessary based on later steps
	Datt$chr <- as.character(Datt$chr)
	Datt2 <- Datt

	#Remove “na” D values
	Datt2 <- Datt2[-which(Datt2$D==“na”),]

	#Need the numbers for chromosomes for labelling and colours:
	DattX <- Datt2[which(Datt2$chr==“X”),]
	a <- dim(DatX) [1]
	DattX$number <- 1:a

	Datt2L <- Datt2[which(Datt2$chr==“2L”),]
	b <- dim(Datt2L)[1]
	Datt2L$number <- (a+1):(a+b)

	Datt2R <- Datt2[which(Datt2$chr==“2R”),]
	c <- dim(Datt2R)[1]
	Datt2R$number <- (a+b+1):(a+b+c)

	Datt3L <- Datt2[which(Datt2$chr==“3L”),]
	d <- dim(Datt3L)[1]
	Datt3L$number <- (a+b+c+1):(a+b+c+d)

	Datt3R <- Datt2[which(Datt2$chr==“3R”),]
	e <- dim(Datt3R)[1]
	Datt3R$number <- (a+b+c+d+1):(a+b+c+d+e)

	Datt4 <- Datt2[which(Datt2$chr==“4”),]
	f <- dim(Datt4)[1]
	Datt4$number <- (a+b+c+d+e+1):(a+b+c+d+e+f)

	#Full data frame of necessary chromosomes
	DattFull <- rbind(DattX, Datt2L, Datt2R, Datt3L, Datt3R, Datt4)

	#D as numeric
	DattFull$D=as.numeric(levels(DattFull$D))[DattFull$D]

	DattFull$Seq <- x2

	#Assign(paste(“Datt”, x2, sep=“_”),DattFull)

	#Title:
	z2 <- paste(x2, y2, sep=“_”)

	#The plots:
	D_plot <- ggplot(DattFull, aes(x = number, y = D, colour = chr))

	D_plot_2 <- D_plot +
		geom_point(size=0.3, show.legend = F) +
		scale_y_continuous(limits=c(-2, 2), breaks=seq(-2, 2, 1)) +
		xlab(“”) +
		scale_x_discrete(limits=c(1049, 3185, 5277, 7443, 9952, 11359), labels = c(“X”, 			“2L”, “2R”, “3L”, “3R”, “4”)) + 
		theme(text = element_text(size=20),
			axis.text.x= element_text(size=15), axis.text.y= element_text(size=15)) +
		scale_colour_manual(values=c(“deeppink4”, “palevioletred3”, “midnightblue”, 				“paleturquoise3”, “springgreen4”, “darkgoldenrod2”)) +
		ggtitle(z2)

	return(D_plot_2)

}

# IMPORTANT: ONCE AGAIN YOU MUST SOURCE THIS FUNCTION, THIS TELLS R WHAT YOU ARE DOING WITH YOUR DATA

# Once you source the function, now you can input the data 

# Example for one file (can repeat and change as necessary)

# Input is file: and the mapper for the title of the plot

#Example: D_PlotFunction(‘.D file generated by popoolation', "additional details for title")

D_PlotFunction('ANCESTOR_ALL_aligned_merged.sorted.final.D’, “D Plot")

D_PlotFunction('LAAD_R1_GAGATTCC-AGGCGAAG_aligned_merged.sorted.final.D’, “D Plot 10kb”)

D_PlotFunction('LAAD_R1_G10_GAGATTCC-TAATCTTA_aligned_merged.sorted.final.D’, “D Plot 10kb”)

D_PlotFunction('LAAD_R2_GAGATTCC-CAGGACGT_aligned_merged.sorted.final.D’, “D Plot 10kb”)

D_PlotFunction('LAAD_R2_G10_GAGATTCC-GTACTGAC_aligned_merged.sorted.final.D’, “D Plot 10kb”)

D_PlotFunction('LAAD_R3_ATTCAGAA-TATAGCCT_aligned_merged.sorted.final.D’, “D Plot 10kb”)

D_PlotFunction('LAAD_R3_G10_ATTCAGAA-ATAGAGGC_aligned_merged.sorted.final.D’, “D Plot R3 10kb”)

#Function to read all and overlay plot
MyD <- list.files(pattern="final.D")
#MyD

for (file in MyD){
  require(ggplot2)
  x2 <-sub("\\_.*","",file)
  
  #Read in the data:
  Datt2 <-read.table(file)
  colnames(Datt2) <- c('chr', 'window', 'windowCount', ' propInwindow', 'D')
  
  Datt2$chr <- as.character(Datt2$chr)
  
  #Remove "na" D values
  Datt2 <- Datt2[-which(Datt2$D=="na"),]
  
  #Need the numbers for chrmosomes for labelling and colours:
  DattX <- Datt2[which(Datt2$chr=="X"),]
  a <- dim(DattX)[1]
  DattX$number <- 1:a
  
  Datt2L <- Datt2[which(Datt2$chr=="2L"),]
  b <- dim(Datt2L)[1]
  Datt2L$number <- (a+1):(a+b)
  
  Datt2R <- Datt2[which(Datt2$chr=="2R"),]
  c <- dim(Datt2R)[1]
  Datt2R$number <- (a+b+1):(a+b+c)
  
  Datt3L <- Datt2[which(Datt2$chr=="3L"),]
  d <- dim(Datt3L)[1]
  Datt3L$number <- (a+b+c+1):(a+b+c+d)
  
  Datt3R <- Datt2[which(Datt2$chr=="3R"),]
  e <- dim(Datt3R)[1]
  Datt3R$number <- (a+b+c+d+1):(a+b+c+d+e)
  
  Datt4 <- Datt2[which(Datt2$chr=="4"),]
  f <- dim(Datt4)[1]
  Datt4$number <- (a+b+c+d+e+1):(a+b+c+d+e+f)
  
  #Full data frame of necessary chromosomes:
  DattFull <- rbind(DattX, Datt2L, Datt2R, Datt3L, Datt3R, Datt4)
  DattFull$Seq <- x2
  DattFull$D=as.numeric(levels(DattFull$D))[DattFull$D]
  assign(paste("Datt2", x2, sep="_"),DattFull)
  
}

DATTTT_R1 <- rbind(Datt2_ANCESTOR, Datt2_LAADR1G10, Datt2_LAADR1G24)
DATTTT_R2 <- rbind(Datt2_ANCESTOR, Datt2_LAADR2G10, Datt2_LAADR2G24)
DATTTT_R3 <- rbind(Datt2_ANCESTOR, Datt2_LAADR3G10, Datt2_LAADR3G24)


gg_R1 <- ggplot(DATTTT_R1, aes(x = number, y= D, linetype = chr, colour=Seq))+
  geom_smooth(method = "loess", size=1.25) + scale_y_continuous(limits=c(-2.00, 2.00), breaks=seq(-2.00, 2.00, 1.00)) +
  xlab("") +
  scale_linetype_manual(values=c("solid", "solid", "dotted", "dotted", "solid", "dotted"), guide = "none") +
  scale_x_discrete(limits=c(1049, 3185, 5277, 7443, 9952, 11359), labels = c("X", "2L", "2R", "3L", "3R", "4")) +
  scale_colour_manual(values=c("tomato", "royalblue2", "orange")) +
  theme(text = element_text(size=20), axis.text.x= element_text(size=15), axis.text.y= element_text(size=15), legend.text=element_text(size=7.5))

print(gg_R1)

gg_R2 <-ggplot(DATTTT_R2, aes(x = number, y= D, linetype = chr, colour=Seq))+
  geom_smooth(method = "loess", size=1.25) + scale_y_continuous(limits=c(-2.00, 2.00), breaks=seq(-2.00, 2.00, 1.00)) +
  xlab("") +
  scale_linetype_manual(values=c("solid", "solid", "dotted", "dotted", "solid", "dotted"), guide = "none") +
  scale_x_discrete(limits=c(1049, 3185, 5277, 7443, 9952, 11359), labels = c("X", "2L", "2R", "3L", "3R", "4")) +
  scale_colour_manual(values=c("tomato", "royalblue2", "orange")) +
  theme(text = element_text(size=20), axis.text.x= element_text(size=15), axis.text.y= element_text(size=15), legend.text=element_text(size=7.5))

print(gg_R2)

gg_R3 <-ggplot(DATTTT_R3, aes(x = number, y= D, linetype = chr, colour=Seq))+
  geom_smooth(method = "loess", size=1.25) + scale_y_continuous(limits=c(-2.00, 2.00), breaks=seq(-2.00, 2.00, 1.00)) +
  xlab("") +
  scale_linetype_manual(values=c("solid", "solid", "dotted", "dotted", "solid", "dotted"), guide = "none") +
  scale_x_discrete(limits=c(1049, 3185, 5277, 7443, 9952, 11359), labels = c("X", "2L", "2R", "3L", "3R", "4")) +
  scale_colour_manual(values=c("tomato", "royalblue2", "orange")) +
  theme(text = element_text(size=20), axis.text.x= element_text(size=15), axis.text.y= element_text(size=15), legend.text=element_text(size=7.5))

print(gg_R3)
