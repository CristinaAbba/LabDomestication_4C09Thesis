CALCULATING TAJIMA'S D (POPOOLATION1)

- Tajima's D = Test of neutrality based on the summary of the site frequency spectrum (Tajima's D statistic) using PoPoolation1
- Calculate the difference between the number of pairwise differences (pi) and the number of segregating sites, scaled to indicate if a population is evolving by random or non-random processes (selection)
- Tajima's D incorporates both measures that have been already calculated (Tajima's pi and Watterson's theta) and it compares the value of Watterson's theta to the pairwise differences (pi) in order to determine if the population is evolving in a random ('neutral') or non-random (under selection) manner.  In this way, whether or not selection, and what type of selection, is acting on a population can be inferred.  The idea is to evaluate whether the average number of differences between individuals is greater or less than what is expected by neutral theory (equilibrium between mutation and drift)
- If Tajima's D is equal to 0, then the two estimates of variation are the same and the population can be described as evolving neutrally, there is a mutation-drift equilibrium  
- If Tajima's D is less than 0, the negative value can be attributed to directional selection because pi is less than theta (lower average nucleotide diversity than number of segregating sites) and rare alleles are present at higher frequencies.  
- This may be caused by a recent hard selective sweep, population expansion or severe bottleneck  
- Lastly, if Tajima's D is above 0 then this may be an indication of balancing selection because pi is greater than theta (more average nucleotide diversity than number of segregating sites) and rare alleles are present at low frequencies 

(a) Run script to calculate Tajima's D

- This script is located under the title "TAJIMAS_D_SM.sh" 
- The maximum coverage for this measure had also initially been set to 400x, so Tajima's D for this data set also has an additional script called "TAJIMAS_D_ANCESTOR_SM.sh" where the maximum coverage is increased to 800x to accommodate for the increased coverage for the ancestral populaiton (approx. 600x)
- In addition to recognizing that the coverage needed to be changed, another change that was made was the tests for selection (Tajima's pi and Watterson's theta) as well as Tajima's D were run once more with 1,000bp (1kb) windows
- Because Sarah's data set was so large the thought process here was that we could achieve more informative data points by using a smaller window
- So the same scripts were run again, just with the smaller 1kb window size, but it turned out that the size of the files when transfered to my local computer were quite large and difficult to visualize using R, so the plots from the 1kb data will not appear in the final report unfortunately

(b) Transfer .D files to local machine

    scp cristina@info.mcmaster.ca:/4/cristina/sequence_analysis_sarah/tajimas_d_SM/*.D .
    
VISUALIZING TAJIMA'S D (R-STUDIO)

- Tajima's D was visualized with the same scripts as the measures of variation, however the axis were adjusted to accommodate for the negative values
- In addition, Paul helped me to add a component to the script to output a value for the percentage of data points located above 0 and the percentage of data points located below 0 
- This is helpful for observing if the values shift over the generational time points, and is relevant for the interpretation of Tajima's D
- The full scipt is listed under "R script: Tajima's D plots"
- Some stats obtained from the Tajima's D plots:

	D_PlotFunction('ANCESTOR_ALL_aligned_merged.sorted.final.D', "D Plot 10kb")
	[1] "Proportion of values above 0 is 0.285505753048257"
	[1] "Proportion of values below 0 is 0.714494246951743"
	Minimum: -2.787535 (on chromosome 3L)
	Maximum: 2.0268678 (on the X chromosome)
	Mean D value: -0.3802477

	D_PlotFunction('LAADR1G24_GAGATTCC-AGGCGAAG_aligned_merged.sorted.final.D', "D Plot 10kb”)
	[1] "Proportion of values above 0 is 0.842864502833591"
	[1] "Proportion of values below 0 is 0.157135497166409"
	Minimum: -2.387261 (on the X chromosome)
	Maximum: 2.687666 (on chromosome 3L)
	Mean D value: 0.6101518

	D_PlotFunction('LAADR1G10_GAGATTCC-TAATCTTA_aligned_merged.sorted.final.D', "D Plot 10kb”)
	[1] "Proportion of values above 0 is 0.772056299347751"
	[1] "Proportion of values below 0 is 0.227943700652249"
	Minimum: -1.890705 (on the X chromosome)
	Maximum: 1.965697 (on the X chromosome)
	Mean D value: 0.2957823

	D_PlotFunction('LAADR2G24_GAGATTCC-CAGGACGT_aligned_merged.sorted.final.D', "D Plot 10kb”)
	[1] "Proportion of values above 0 is 0.856249464576373"
	[1] "Proportion of values below 0 is 0.143750535423627"
	Minimum: -2.089333 (on the X chromosome)
	Maximum: 0.6525548 (on the X chromosome)
	Mean D value: 0.6525548

	D_PlotFunction('LAADR2G10_GAGATTCC-GTACTGAC_aligned_merged.sorted.final.D', "D Plot 10kb”)
	[1] "Proportion of values above 0 is 0.764136394790953"
	[1] "Proportion of values below 0 is 0.235863605209047"
	Minimum: -2.010989 (on chromsome 2L)
	Maximum: 2.203568 (on chromosome X)
	Mean D value: 0.3065229

	D_PlotFunction('LAADR3G24_ATTCAGAA-TATAGCCT_aligned_merged.sorted.final.D', "D Plot 10kb”)
	[1] "Proportion of values above 0 is 0.847210300429185"
	[1] "Proportion of values below 0 is 0.152789699570815"
	Minimum: -2.102362 (on chromosome 3R)
	Maximum: 2.437281 (on chromosome 2R)
	Mean D value: 0.5634184

	D_PlotFunction('LAADR3G10_ATTCAGAA-ATAGAGGC_aligned_merged.sorted.final.D', "D Plot 10kb”)
	[1] "Proportion of values above 0 is 0.740233036326251"
	[1] "Proportion of values below 0 is 0.259766963673749"
	Minimum: -2.092513 (on chromosome 2L)
	Maximum: 2.138966 (on chromosome 4)
	Mean D value: 0.271117
	
- And despite not being to graph the 1kb data all that well, I still managed to get some stats from the the files using R:

	D_PlotFunction('ANCESTOR_ALL_aligned_merged.sorted.final.1kb.D', "D Plot 1kb")
	[1] "Proportion of values above 0 is 0.346116877276214"
	[1] "Proportion of values below 0 is 0.653883122723785"
	Mean D value: -0.4050982
 
	D_PlotFunction('LAADR1G24_GAGATTCC-AGGCGAAG_aligned_merged.sorted.final.1kb.D', "D Plot 1kb")
	[1] "Proportion of values above 0 is 0.7315621960923"
	[1] "Proportion of values below 0 is 0.2684378039077"

	D_PlotFunction('LAADR1G10_GAGATTCC-TAATCTTA_aligned_merged.sorted.final.1kb.D', "D Plot 1kb")
	[1] "Proportion of values above 0 is 0.638139315971133"
	[1] "Proportion of values below 0 is 0.361860684028867"

	D_PlotFunction('LAADR2G24_GAGATTCC-CAGGACGT_aligned_merged.sorted.final.1kb.D', "D Plot 1kb")
	[1] "Proportion of values above 0 is 0.734061499320086"
	[1] "Proportion of values below 0 is 0.265938500679914"

	D_PlotFunction('LAADR2G10_GAGATTCC-GTACTGAC_aligned_merged.sorted.final.1kb.D', "D Plot 1kb")
	[1] "Proportion of values above 0 is 0.632615256168303"
	[1] "Proportion of values below 0 is 0.367384743831697"

	D_PlotFunction('LAADR3G24_ATTCAGAA-TATAGCCT_aligned_merged.sorted.final.1kb.D', "D Plot 1kb")
	[1] "Proportion of values above 0 is 0.718893322225633"
	[1] "Proportion of values below 0 is 0.281106677774368"

	D_PlotFunction('LAADR3G10_ATTCAGAA-ATAGAGGC_aligned_merged.sorted.final.1kb.D', "D Plot 1kb")
	[1] "Proportion of values above 0 is 0.616993361832273"
	[1] "Proportion of values below 0 is 0.383006638167727"
	
SUBSAMPLING (POPOOLATION2)

- Run subsample script from PoPoolation2 to reduce to a uniform coverage for all populations populations 
- Should do this before running the other PoPoolation2 measures 
- Example when you call perl for help:

	perl subsample-synchronized.pl --input input.sync --output output.sync --target-coverage 50 --max-coverage 2%  --method
       withoutreplacement

- Options:

	--input = The input file in the synchronized format; Mandatory.
    --output = The output file, will be a synchronized file  Mandatory.
    --target-coverage = Reduce the coverage of the pileup-file to the here provided value; The target 	coverage also acts as minimum coverage, i.e.: if the coverage in any population is smaller than the targetcoverage the whole pileup entry is discarded. Mandatory
    --max-coverage = The maximum coverage; All populations are required to have coverages lower or equal than the maximum coverage; Mandatory The maximum coverage may be provided as one of the following:
              '500' a maximum coverage of 500 will be used for all populations
              '300,400,500' a maximum coverage of 300 will be used for the first population, a maximum coverage of 400 for the second population and so on
            '2%' the 2% highest coverages will be ignored, this value is independently estimated for every population
	--method = Specify the method for subsampling of the synchronized file. Either: withreplace, withoutreplace, fraction; Mandatory
            withreplace: subsample with replacement
            withoutreplace: subsample without replacement
            fraction: calculate the exact fraction of the allele frequencies and linearly scale them to the C<--target-coverage> and rounding to an integer;
			
- Paul used the following values for his data:

	40 for target coverage
	200 for maximum coverage
	‘with replacement’ for methods
	
- But Sarah's dataset is larger and sequenced at a higher coverage (140x for LAAD and 600 for ANCESTOR), so I am thinking of using:

	80 for target coverage?
	800 for maximum coverage?  Actually using the help function Paul and I learned that you 	can differentiate the maximum coverages for the different populations 
	
- The script for subsampling is titled "SUBSAMPLE_SM.sh"

CALCULATING FST (POPOOLATION2)

- What can be done with PoPoolation2?
	
	Measure differentiation between natural populations (identify differentiated genomic 	regions)
	Pool-GWAS; phenotypically extreme individuals (black vs white) abdomen) are separated 	into groups which are sequenced as pools.  Allele frequency differences between these two groups may allow to identify the causative alleles
	Evolve and resequencing studies; populations are allowed to adapt to novel environmental 	conditions. Loci responsible for adaptation can be identified by comparing the allele frequencies in the populations before and after adaptation
	
- Order of Sarah’s bam files so that we know which pairwise comparison is which (the program will compare 1/2, 1/3 etc so for example that might be ANCESTOR vs LAADR1G10, and ANCESTOR vs LAADR1G24 etc.
- I will be interested to see if the same candidates appear across replicates and then look to see how they compare to Paul’s data

	1.  ANCESTOR_ALL_aligned_merged.sorted.final_indel.bam
	2.  LAAD_R1_G10_GAGATTCC-TAATCTTA_aligned_merged.sorted.final_indel.bam
	3.  LAAD_R1_GAGATTCC-AGGCGAAG_aligned_merged.sorted.final_indel.bam
	4.  LAAD_R2_G10_GAGATTCC-GTACTGAC_aligned_merged.sorted.final_indel.bam
	5.  LAAD_R2_GAGATTCC-CAGGACGT_aligned_merged.sorted.final_indel.bam
	6.  LAAD_R3_ATTCAGAA-TATAGCCT_aligned_merged.sorted.final_indel.bam
	7.  LAAD_R3_G10_ATTCAGAA-ATAGAGGC_aligned_merged.sorted.final_indel.bam
	
(a) Run script to calculate Fst

- Initially I experienced a lot of difficulty trying to run my Fst script, this is when Dr. Dworkin helped me realize that I was using the wrong input...it was supposed to be the Tajima's D script that used the subsampled input, NOT Fst, so I made the fix for the Fst script, and the correct script is provided here, but I did not have time at th end of the term to go back and use the subsampled input for Tajima's D
- Since I ran the ancestor at a higher coverage, I will make a note in the discussion of my final report about my mistake
- The Fst script (with the correct input) is listed under 'FST_SM.sh"

(b) Tansfer .fst values to local machine 

	scp cristina@info.mcmaster.ca:/4/cristina/sequence_analysis_sarah/popool2_SM/*.fst .

VISUALIZING FST (R-STUDIO)

- There are two aspects to the script that Paul wrote:

	1. "R script: Separate Fst comparisons" = The first part is for splitting up the large .fst file into seperate .csv files for each comparisn that are easier to work with
	2. "R script: Fst plots" = The second part is for creating the actual plots themselves.  Using the meanFst and combining the replicates at the different generational time points.  So the script here is from the meanFst Manhattan plot generated for ANCESTOR vs all three replicates at generaiton 10, but can be mainipulated for any comapriosn you like
